{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{399:function(t,s,v){\"use strict\";v.r(s);var _=v(42),a=Object(_.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[v(\"h1\",{attrs:{id:\"算法知识\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#算法知识\"}},[t._v(\"#\")]),t._v(\" 算法知识\")]),t._v(\" \"),v(\"h2\",{attrs:{id:\"国王与金矿问题\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#国王与金矿问题\"}},[t._v(\"#\")]),t._v(\" 国王与金矿问题\")]),t._v(\" \"),v(\"p\",[t._v(\"问题描述：\")]),t._v(\" \"),v(\"blockquote\",[v(\"p\",[t._v(\"国王有 10 座金矿，已知每座金矿的金币数量和所需开挖的人数，国王招募了 7 个人，问怎样合理分配才使挖去的金币数最多\")])]),t._v(\" \"),v(\"p\",[t._v(\"问题补充：\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"每座金矿需要的人数固定，多一个，少一个都不行；\")]),t._v(\" \"),v(\"li\",[t._v(\"每座金矿要么全部挖出，要么不挖；\")]),t._v(\" \"),v(\"li\",[t._v(\"每个人只能挖一座金矿，不可重复挖；\")])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"分析\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分析\"}},[t._v(\"#\")]),t._v(\" 分析\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"首先将金矿按 0，1，2，3，4，5，6，7，8，9 顺序进行编号；\")]),t._v(\" \"),v(\"li\",[t._v(\"首先我们先来到第 9 号金矿，9 号金矿存在 2 中情况，要么开挖，要么不挖；\")]),t._v(\" \"),v(\"li\",[t._v(\"设想，如果我知道 0 到 8 号金矿最多能开挖到的金币数(设为 y)：\\n\"),v(\"ul\",[v(\"li\",[t._v(\"9 号开挖的情况：最大金币数 = y + 9 号金矿金币数\")]),t._v(\" \"),v(\"li\",[t._v(\"9 号不开挖的情况：最大金币数 = y ，所以我只要取其 2 种情况中的最大值即可 Max(y + 9 号金矿金币数 , y )\")])])])]),t._v(\" \"),v(\"p\",[t._v(\"g[i] 表示第 i 座金矿的金子数\\np[i] 表示第 i 座金矿所需的人数\\nn 表示总的挖矿人数\\nf(n,i) 表示当有 n 个人时，挖取第 i 个金矿时所获取到的最多金币数\")]),t._v(\" \"),v(\"h4\",{attrs:{id:\"当-i-0-只有-1-座金矿-时\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#当-i-0-只有-1-座金矿-时\"}},[t._v(\"#\")]),t._v(\" 当 i == 0 （只有 1 座金矿）时：\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"n >= p[i] ：总人数 >= 当前矿开挖所需的人数，最大金币数 = 当前矿的金币数 f(n,i) = g[i] ；\")]),t._v(\" \"),v(\"li\",[t._v(\"n < p[i] ：总人数 < 当前矿开挖所需的人数，最大金币数 = 0 f(n, i) = 0 ;\")])]),t._v(\" \"),v(\"h4\",{attrs:{id:\"当-i-0-有多座金矿-时\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#当-i-0-有多座金矿-时\"}},[t._v(\"#\")]),t._v(\" 当 i !== 0（有多座金矿）时：\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"如果当前矿开挖，最大金币数 = 前面矿的最大金币数 + 当前矿的金币数\\n\"),v(\"blockquote\",[v(\"p\",[t._v(\"f(n,i) = f(n-p[i], i - 1) + g[i]\")])])]),t._v(\" \"),v(\"li\",[t._v(\"如果当前矿不开挖， 最大金币数 = 前面矿的最大金币数\\n\"),v(\"blockquote\",[v(\"p\",[t._v(\"f(n,i-1)\")])])])]),t._v(\" \"),v(\"p\",[t._v(\"所以 i !== 0 时， 最大金币数 = Max(f(n-p[i], i - 1) + g[i], f(n,i-1)) 两者中的最大值\")]),t._v(\" \"),v(\"h2\",{attrs:{id:\"爬台阶问题\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#爬台阶问题\"}},[t._v(\"#\")]),t._v(\" 爬台阶问题\")]),t._v(\" \"),v(\"p\",[t._v(\"问题描述:\")]),t._v(\" \"),v(\"blockquote\",[v(\"p\",[t._v(\"一个人爬楼梯，每次只能爬 1 个台阶或 2 个台阶，如果有 n 个台阶，请问一共有多少种爬台阶的方法\")])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"问题分析\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#问题分析\"}},[t._v(\"#\")]),t._v(\" 问题分析\")]),t._v(\" \"),v(\"p\",[t._v(\"根据题目分析，每次只能爬 1 个台阶或 2 个台阶，那么起步的话，要么从 1 个台阶开始，要么从 2 个台阶开始，\\n这里将起步从 1 开始的方案称为 \"),v(\"code\",[t._v(\"A\")]),t._v(\"方案 ,起步从 2 开始的方案称为 \"),v(\"code\",[t._v(\"B\")]),t._v(\" 方案\")]),t._v(\" \"),v(\"p\",[t._v(\"那么走完 n 个台阶的方案就是：\")]),t._v(\" \"),v(\"blockquote\",[v(\"p\",[v(\"code\",[t._v(\"N = A + B\")])])]),t._v(\" \"),v(\"p\",[t._v(\"现在所要解决的就是 \"),v(\"code\",[t._v(\"A\")]),t._v(\" 和 \"),v(\"code\",[t._v(\"B\")]),t._v(\" 分别是多少？下面通过一张表格来分析：\")]),t._v(\" \"),v(\"table\",[v(\"thead\",[v(\"tr\",[v(\"th\",[t._v(\"台阶数\")]),t._v(\" \"),v(\"th\",[t._v(\"A 方案\")]),t._v(\" \"),v(\"th\",[t._v(\"B 方案\")]),t._v(\" \"),v(\"th\",[t._v(\"N\")])])]),t._v(\" \"),v(\"tbody\",[v(\"tr\",[v(\"td\",[t._v(\"0\")]),t._v(\" \"),v(\"td\",[t._v(\"0\")]),t._v(\" \"),v(\"td\",[t._v(\"0\")]),t._v(\" \"),v(\"td\",[t._v(\"0\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"1\")]),t._v(\" \"),v(\"td\",[t._v(\"1\")]),t._v(\" \"),v(\"td\",[t._v(\"0\")]),t._v(\" \"),v(\"td\",[t._v(\"1\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"2\")]),t._v(\" \"),v(\"td\",[t._v(\"1\")]),t._v(\" \"),v(\"td\",[t._v(\"1\")]),t._v(\" \"),v(\"td\",[t._v(\"2\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"3\")]),t._v(\" \"),v(\"td\",[t._v(\"2\")]),t._v(\" \"),v(\"td\",[t._v(\"1\")]),t._v(\" \"),v(\"td\",[t._v(\"3\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"4\")]),t._v(\" \"),v(\"td\",[t._v(\"3\")]),t._v(\" \"),v(\"td\",[t._v(\"2\")]),t._v(\" \"),v(\"td\",[t._v(\"5\")])])])]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"当台阶为 0 时，\"),v(\"code\",[t._v(\"A,B\")]),t._v(\" 2 种方案都是 0；\")]),t._v(\" \"),v(\"li\",[t._v(\"当台阶为 1 时，\"),v(\"code\",[t._v(\"A = 1，B = 0\")]),t._v(\"；\")]),t._v(\" \"),v(\"li\",[t._v(\"当台阶为 3 时，\"),v(\"code\",[t._v(\"A = [111,12]\")]),t._v(\" 2 种走法，\"),v(\"code\",[t._v(\"B = [2]\")]),t._v(\" 1 种走法\")]),t._v(\" \"),v(\"li\",[t._v(\"当台阶为 4 时，\"),v(\"code\",[t._v(\"A = [1111,1211,1122]\")]),t._v(\" 3 种走法， \"),v(\"code\",[t._v(\"B = [211,22]\")]),t._v(\" 2 种走法\")])]),t._v(\" \"),v(\"p\",[t._v(\"通过以上分析，我们可以发现 \"),v(\"code\",[t._v(\"A = n - 1 , B = n - 2\")]),t._v(\" ,由此我们可以推导出：\")]),t._v(\" \"),v(\"p\",[t._v(\"当 \"),v(\"code\",[t._v(\"n > 2\")]),t._v(\" 时\")]),t._v(\" \"),v(\"blockquote\",[v(\"p\",[v(\"code\",[t._v(\"f(n) = f(n - 1) + f(n - 2)\")])])]),t._v(\" \"),v(\"p\",[t._v(\"且 \"),v(\"code\",[t._v(\"n <= 2\")]),t._v(\" 时\")]),t._v(\" \"),v(\"blockquote\",[v(\"p\",[v(\"code\",[t._v(\"f(0) = 0\")]),t._v(\" > \"),v(\"code\",[t._v(\"f(1) = 1\")]),t._v(\" > \"),v(\"code\",[t._v(\"f(2) = 2\")])])]),t._v(\" \"),v(\"p\",[t._v(\"递归代码：\")]),t._v(\" \"),v(\"div\",{staticClass:\"language-js line-numbers-mode\"},[v(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[v(\"code\",[v(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"f\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),v(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"n\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),v(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n \"),v(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),v(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n \"),v(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),v(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n \"),v(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),v(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"f\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n \"),v(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"f\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n \"),v(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])]),t._v(\" \"),v(\"div\",{staticClass:\"line-numbers-wrapper\"},[v(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),v(\"br\")])]),v(\"h3\",{attrs:{id:\"总结\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#总结\"}},[t._v(\"#\")]),t._v(\" 总结\")]),t._v(\" \"),v(\"p\",[t._v(\"通过以上分析，我们来总结一下如何写递归：\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"1.将大问题，分解为小问题，比如将 n 个台阶，分解为 1，2，3，4 个台阶\")]),t._v(\" \"),v(\"li\",[t._v(\"2.根据小问题的规律，通过规律递推出公式\")]),t._v(\" \"),v(\"li\",[t._v(\"3.通过公式的临界点，推导出递推的终止条件\")]),t._v(\" \"),v(\"li\",[t._v(\"4.将递推公式翻译成递归代码\")])]),t._v(\" \"),v(\"p\",[t._v(\"这里我多细分了一部，将 1，2 两种走台阶的方法也细分了下，分为 A,B 两种方案，然后通过递推出 A，B 方案对应的公式，最后组合成最终的公式，\\n这样做是便于大家理解。\")])])}),[],!1,null,null,null);s.default=a.exports}}]);","extractedComments":[]}